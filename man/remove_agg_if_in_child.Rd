% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tree_funs.r
\name{remove_agg_if_in_child}
\alias{remove_agg_if_in_child}
\title{Remove aggregated quantity if it exists in a child node}
\usage{
remove_agg_if_in_child(node, property)
}
\arguments{
\item{node}{data.tree node, where a quantity has been aggregated using
`list_up_tree`()}

\item{property}{name of the property which was originally aggregated (i.e.
same char vector you passed to `list_up_tree`())}
}
\value{
a tree where the aggregated field no longer contains ids if they are
 elsewhere in the tree
}
\description{
Idea is that you can aggregate a property up a tree (taxon id), then prune the
tree, then apply this function to end up with taxons that were originally on
pruned nodes, on their closest unpruned parent
}
\examples{

### Aggregate some property
list_up_tree(node = taxonomy_tree, property = "name")

### Prune tree
data.tree::Prune(taxonomy_tree, function(x) x$n_pages_agg >= threshold)

### remove properties from the aggregate if they are still in the tree
remove_agg_if_in_child(node = taxonomy_tree, property = "name")

}
